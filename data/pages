{"title":"Some title in here","notebook":"wq59r1TtRzx6CraL","tags":[],"notes":[{"header":"Some header","subheader":"Some subheader","content":"{\"blocks\":[{\"key\":\"db7tn\",\"text\":\"Title\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":5,\"style\":\"FONTSIZE_28\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"5bh24\",\"text\":\"Subtitle\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":8,\"style\":\"FONTSIZE_18\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"enba6\",\"text\":\"Color highlighted bod\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":5,\"style\":\"BOLD\"},{\"offset\":18,\"length\":3,\"style\":\"BOLD\"},{\"offset\":0,\"length\":5,\"style\":\"#F47373\"},{\"offset\":6,\"length\":11,\"style\":\"HIGHLIGHT\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"7ggpi\",\"text\":\"\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"c94er\",\"text\":\"askdnjkajnksdnjkansjkdnjkansjkdjnkansjkdnjksa\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[],\"entityRanges\":[],\"data\":{}},{\"key\":\"5t6m1\",\"text\":\"striked\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":7,\"style\":\"STRIKETHROUGH\"}],\"entityRanges\":[],\"data\":{}},{\"key\":\"322jn\",\"text\":\"underlined\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":10,\"style\":\"UNDERLINE\"}],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{}}","plainTextContent":"Title\nSubtitle\nColor highlighted bod\n\naskdnjkajnksdnjkansjkdnjkansjkdjnkansjkdnjksa\nstriked\nunderlined","htmlContent":"<p><span style=\"font-size: 28px\">Title</span></p>\n<p><span style=\"font-size: 18px\">Subtitle</span></p>\n<p><span style=\"color: #F47373\"><strong style=\"font-weight: bold\">Color</strong></span> <span style=\"background-color: #FFE47F; padding: 0 .15em; color: #000000\">highlighted</span> <strong style=\"font-weight: bold\">bod</strong></p>\n<p><br></p>\n<p>askdnjkajnksdnjkansjkdnjkansjkdjnkansjkdnjksa</p>\n<p><del style=\"text-decoration: line-through\">striked</del></p>\n<p><u style=\"text-decoration: underline\">underlined</u></p>","snippet":{"language":"javascript","code":"<CardHeader title={note.header} subheader={note.subheader}\n        action={\n          <IconButton onClick={() => setIsOpen(!isOpen)} className={classes.expandIcon}>\n            {isOpen ? <ExpandLessIcon fontSize=\"small\" />\n              : <ExpandMoreIcon fontSize=\"small\" />}\n          </IconButton>\n        } className=\"py-1\"\n        classes={{ title: classes.noteHeader, subheader: classes.noteSubheader }} />","htmlCode":"<div style=\"color: #000000;background-color: #fffffe;font-family: Menlo, Monaco, 'Courier New', monospace;font-weight: normal;font-size: 12px;line-height: 18px;white-space: pre;\"><div><span style=\"color: #000000;\">&lt;</span><span style=\"color: #008080;\">CardHeader</span><span style=\"color: #000000;\"> title={note.header} subheader={note.subheader}</span></div><div><span style=\"color: #000000;\">        action={</span></div><div><span style=\"color: #000000;\">          &lt;</span><span style=\"color: #008080;\">IconButton</span><span style=\"color: #000000;\"> onClick={() =&gt; setIsOpen(!isOpen)} className={classes.expandIcon}&gt;</span></div><div><span style=\"color: #000000;\">            {isOpen ? &lt;</span><span style=\"color: #008080;\">ExpandLessIcon</span><span style=\"color: #000000;\"> fontSize=</span><span style=\"color: #a31515;\">\"small\"</span><span style=\"color: #000000;\"> /&gt;</span></div><div><span style=\"color: #000000;\">              : &lt;</span><span style=\"color: #008080;\">ExpandMoreIcon</span><span style=\"color: #000000;\"> fontSize=</span><span style=\"color: #a31515;\">\"small\"</span><span style=\"color: #000000;\"> /&gt;}</span></div><div><span style=\"color: #000000;\">          &lt;/</span><span style=\"color: #008080;\">IconButton</span><span style=\"color: #000000;\">&gt;</span></div><div><span style=\"color: #000000;\">        } className=</span><span style=\"color: #a31515;\">\"py-1\"</span></div><div><span style=\"color: #000000;\">        classes={{ title: classes.noteHeader, subheader: classes.noteSubheader }} /&gt;</span></div></div>"},"hideContent":false,"hideSnippet":false,"createdAt":{"$$date":1562282569951}}],"createdAt":{"$$date":1562282569951},"updatedAt":{"$$date":1562282569951},"_id":"Ap0PkKIFnpUg80aH"}
{"title":"Some title #2","notebook":"wq59r1TtRzx6CraL","tags":[],"notes":[{"header":"Header","subheader":"Subheader","content":"{\"blocks\":[{\"key\":\"2aq5o\",\"text\":\"This is my content\",\"type\":\"unstyled\",\"depth\":0,\"inlineStyleRanges\":[{\"offset\":0,\"length\":18,\"style\":\"HIGHLIGHT\"}],\"entityRanges\":[],\"data\":{}}],\"entityMap\":{}}","plainTextContent":"This is my content","htmlContent":"<p><span style=\"background-color: #FFE47F; padding: 0 .15em; color: #000000\">This is my content</span></p>","snippet":{"language":"javascript","code":"import React, { useCallback, useRef, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Formik } from 'formik';\nimport Paper from '@material-ui/core/Paper';\nimport { useMutation, useApolloClient } from 'react-apollo-hooks';\nimport { yup } from '../../../lib/validation/yup';\nimport { Subject } from 'rxjs';\n\n// Components\nimport { IPage, INote, ISnippet, INotebook } from '../../../graphql/models';\nimport PageHeader from './pageHeader';\nimport NotesSection from './notesSection';\nimport { Omit } from '../../../../../shared/tsUtil';\nimport TagsSection from './tagsSection';\nimport { CreatePageInput, createPageMutation, CreatePageResp } from '../../../graphql/mutations/createPage';\nimport { Theme } from '@material-ui/core';\n\nexport type FormPage = IPage | { notebook: FormNotebook };\nexport type FormNotebook = Partial<INotebook> & Pick<INotebook, 'name'>;\n\nexport interface IPageFormStatus {\n  isDirty?: boolean;\n  isValid?: boolean;\n  isSubmitting?: boolean;\n  errors?: any;\n}\n\nconst getStyles = (theme: Theme) => {\n  return {\n    root: {\n      display: 'flex',\n      flexDirection: 'column' as 'column',\n      position: 'relative' as 'relative',\n      height: '100%'\n    },\n    mainPageForm: {\n      overflow: 'auto',\n      display: 'flex',\n      height: '100%',\n      flexDirection: 'column' as 'column',\n    },\n    pageHeader: {\n      display: 'flex',\n      justifyContent: 'flex-end',\n      padding: '4px 16px 3px',\n      width: '100%',\n      borderBottom: '1px solid rgba(0, 0, 0, 0.12)'\n    },\n    notesSection: {\n      display: 'flex',\n      backgroundColor: theme.palette.grey[100],\n      flexGrow: 1\n    },\n    tagsSection: {\n      position: 'sticky' as 'sticky',\n      bottom: 0,\n      display: 'flex',\n      backgroundColor: theme.palette.background.paper,\n      width: '100%',\n      padding: '0 16px',\n      borderTop: '1px solid rgba(0, 0, 0, 0.12)'\n    }\n  };\n};\n\nconst noteValidationSchema = yup.object().shape<INote>({\n  header: yup.string().required(),\n  subheader: yup.string().nullable().notRequired(),\n  snippet: yup.object().shape<ISnippet>({\n    language: yup.string().required(),\n    code: yup.string(),\n    htmlCode: yup.string()\n  }),\n  hideContent: yup.bool().nullable(),\n  hideSnippet: yup.bool().nullable(),\n  htmlContent: yup.string(),\n  plainTextContent: yup.string(),\n  content: yup.string(),\n  createdAt: yup.date().nullable().notRequired(),\n  updatedAt: yup.date().nullable().notRequired()\n});\n\nconst pageValidationSchema = yup.object().shape<FormPage>({\n  _id: yup.string().nullable().notRequired(),\n  title: yup.string().required(),\n  tags: yup.array().of(yup.string().required()).nullable(),\n  notebook: yup.object().shape<FormNotebook>({\n    name: yup.string().required()\n  }).required(),\n  notes: yup.array().of(noteValidationSchema).min(1, 'At least one note is required'),\n  createdAt: yup.date().nullable().notRequired(),\n  updatedAt: yup.date().nullable().notRequired()\n});\n\nconst defaultNote = {\n  get value() {\n    return {\n      header: '',\n      subheader: '',\n      content: '',\n      plainTextContent: '',\n      htmlContent: '',\n      hideContent: true,\n      hideSnippet: true,\n      snippet: { language: 'javascript', code: '', htmlCode: '' }\n    };\n  }\n};\n\nexport interface IPageEditProps {\n  submitSubject: Subject<void>;\n  formStatus: React.MutableRefObject<IPageFormStatus>;\n  onSubmitted: () => void;\n}\n\nfunction Page({ formStatus, submitSubject, onSubmitted }: IPageEditProps) {\n  const classes = makeStyles(getStyles)({});\n  const currentPage = {} as IPage;\n  const createPage = useMutation<CreatePageResp, CreatePageInput>(createPageMutation);\n  const apolloClient = useApolloClient();\n  const beforeSubmitSubject = useRef(new Subject<void>());\n  const formikRef = useRef<Formik<Omit<IPage, '_id'>>>(null);\n\n  const getInitialValues = useCallback((): Omit<IPage, '_id'> => ({\n    title: currentPage.title || '',\n    notebook: currentPage.notebook,\n    tags: currentPage.tags || [],\n    notes: Array.isArray(currentPage.notes) ? currentPage.notes\n      : [Object.assign(defaultNote.value, { hideContent: false, hideSnippet: false })]\n  }), []);\n\n  const submitPage = useCallback(async () => {\n    try {\n      // Trigger onBefore submit to set child values\n      // (som operations are too heavy to set with the usual onChange pattern)\n      await beforeSubmitSubject.current.next();\n      const formValues = formikRef.current.getFormikBag().values;\n\n      await createPage({\n        variables: { input: { ...formValues, notebook: formValues.notebook.name } },\n        update: async () => {\n          await apolloClient.resetStore();\n          onSubmitted();\n        }\n      });\n    } catch {} // tslint:disable-line no-empty\n  }, []);\n\n  useEffect(() => {\n    const submitSubscription = submitSubject.subscribe(async () => {\n      if (!formStatus.current.isValid) {\n        // Phantom submit invalid form, just to show validation errors\n        formikRef.current.submitForm();\n      } else if (!formStatus.current.isDirty) {\n        onSubmitted();\n      } else {\n        await submitPage();\n      }\n    });\n\n    return () => submitSubscription.unsubscribe();\n  }, []);\n\n  return (\n    <Paper className={classes.root}>\n      <Formik ref={formikRef} initialValues={getInitialValues()} validationSchema={pageValidationSchema} onSubmit={() => {}}>\n        {(formikBag) => {\n          const { dirty, isValid, isSubmitting, errors } = formikBag;\n          formStatus.current = { isDirty: dirty, isSubmitting, isValid, errors };\n\n          return (\n            <form className={classes.mainPageForm}>\n              <section className={classes.pageHeader}>\n                <PageHeader parentFormBag={formikBag} />\n              </section>\n\n              <section className={classes.notesSection}>\n                <NotesSection beforeSubmitSubject={beforeSubmitSubject.current} parentFormBag={formikBag} defaultNote={defaultNote} />\n              </section>\n              <section className={classes.tagsSection}>\n                <TagsSection parentFormBag={formikBag} />\n              </section>\n            </form>\n          );\n        }}\n      </Formik>\n    </Paper>\n  );\n}\n\nPage.propTypes = {\n  formStatus: PropTypes.shape({ current: PropTypes.object }).isRequired,\n  submitSubject: PropTypes.object.isRequired,\n  onSubmitted: PropTypes.func.isRequired\n};\n\nexport default Page;","htmlCode":"<div style=\"color: #000000;background-color: #fffffe;font-family: Menlo, Monaco, 'Courier New', monospace;font-weight: normal;font-size: 12px;line-height: 18px;white-space: pre;\"><div><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> </span><span style=\"color: #008080;\">React</span><span style=\"color: #000000;\">, { useCallback, useRef, useEffect, useState } </span><span style=\"color: #0000ff;\">from</span><span style=\"color: #000000;\"> </span><span style=\"color: #a31515;\">'react'</span><span style=\"color: #000000;\">;</span></div><div><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> </span><span style=\"color: #008080;\">PropTypes</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">from</span><span style=\"color: #000000;\"> </span><span style=\"color: #a31515;\">'prop-types'</span><span style=\"color: #000000;\">;</span></div><div><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> { makeStyles } </span><span style=\"color: #0000ff;\">from</span><span style=\"color: #000000;\"> </span><span style=\"color: #a31515;\">'@material-ui/styles'</span><span style=\"color: #000000;\">;</span></div><div><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> { </span><span style=\"color: #008080;\">Formik</span><span style=\"color: #000000;\"> } </span><span style=\"color: #0000ff;\">from</span><span style=\"color: #000000;\"> </span><span style=\"color: #a31515;\">'formik'</span><span style=\"color: #000000;\">;</span></div><div><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> </span><span style=\"color: #008080;\">Paper</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">from</span><span style=\"color: #000000;\"> </span><span style=\"color: #a31515;\">'@material-ui/core/Paper'</span><span style=\"color: #000000;\">;</span></div><div><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> { useMutation, useApolloClient } </span><span style=\"color: #0000ff;\">from</span><span style=\"color: #000000;\"> </span><span style=\"color: #a31515;\">'react-apollo-hooks'</span><span style=\"color: #000000;\">;</span></div><div><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> { yup } </span><span style=\"color: #0000ff;\">from</span><span style=\"color: #000000;\"> </span><span style=\"color: #a31515;\">'../../../lib/validation/yup'</span><span style=\"color: #000000;\">;</span></div><div><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> { </span><span style=\"color: #008080;\">Subject</span><span style=\"color: #000000;\"> } </span><span style=\"color: #0000ff;\">from</span><span style=\"color: #000000;\"> </span><span style=\"color: #a31515;\">'rxjs'</span><span style=\"color: #000000;\">;</span></div><br><div><span style=\"color: #008000;\">// Components</span></div><div><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> { </span><span style=\"color: #008080;\">IPage</span><span style=\"color: #000000;\">, </span><span style=\"color: #008080;\">INote</span><span style=\"color: #000000;\">, </span><span style=\"color: #008080;\">ISnippet</span><span style=\"color: #000000;\">, </span><span style=\"color: #008080;\">INotebook</span><span style=\"color: #000000;\"> } </span><span style=\"color: #0000ff;\">from</span><span style=\"color: #000000;\"> </span><span style=\"color: #a31515;\">'../../../graphql/models'</span><span style=\"color: #000000;\">;</span></div><div><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> </span><span style=\"color: #008080;\">PageHeader</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">from</span><span style=\"color: #000000;\"> </span><span style=\"color: #a31515;\">'./pageHeader'</span><span style=\"color: #000000;\">;</span></div><div><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> </span><span style=\"color: #008080;\">NotesSection</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">from</span><span style=\"color: #000000;\"> </span><span style=\"color: #a31515;\">'./notesSection'</span><span style=\"color: #000000;\">;</span></div><div><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> { </span><span style=\"color: #008080;\">Omit</span><span style=\"color: #000000;\"> } </span><span style=\"color: #0000ff;\">from</span><span style=\"color: #000000;\"> </span><span style=\"color: #a31515;\">'../../../../../shared/tsUtil'</span><span style=\"color: #000000;\">;</span></div><div><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> </span><span style=\"color: #008080;\">TagsSection</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">from</span><span style=\"color: #000000;\"> </span><span style=\"color: #a31515;\">'./tagsSection'</span><span style=\"color: #000000;\">;</span></div><div><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> { </span><span style=\"color: #008080;\">CreatePageInput</span><span style=\"color: #000000;\">, createPageMutation, </span><span style=\"color: #008080;\">CreatePageResp</span><span style=\"color: #000000;\"> } </span><span style=\"color: #0000ff;\">from</span><span style=\"color: #000000;\"> </span><span style=\"color: #a31515;\">'../../../graphql/mutations/createPage'</span><span style=\"color: #000000;\">;</span></div><div><span style=\"color: #0000ff;\">import</span><span style=\"color: #000000;\"> { </span><span style=\"color: #008080;\">Theme</span><span style=\"color: #000000;\"> } </span><span style=\"color: #0000ff;\">from</span><span style=\"color: #000000;\"> </span><span style=\"color: #a31515;\">'@material-ui/core'</span><span style=\"color: #000000;\">;</span></div><br><div><span style=\"color: #0000ff;\">export</span><span style=\"color: #000000;\"> type </span><span style=\"color: #008080;\">FormPage</span><span style=\"color: #000000;\"> = </span><span style=\"color: #008080;\">IPage</span><span style=\"color: #000000;\"> | { notebook: </span><span style=\"color: #008080;\">FormNotebook</span><span style=\"color: #000000;\"> };</span></div><div><span style=\"color: #0000ff;\">export</span><span style=\"color: #000000;\"> type </span><span style=\"color: #008080;\">FormNotebook</span><span style=\"color: #000000;\"> = </span><span style=\"color: #008080;\">Partial</span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #008080;\">INotebook</span><span style=\"color: #000000;\">&gt; &amp; </span><span style=\"color: #008080;\">Pick</span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #008080;\">INotebook</span><span style=\"color: #000000;\">, </span><span style=\"color: #a31515;\">'name'</span><span style=\"color: #000000;\">&gt;;</span></div><br><div><span style=\"color: #0000ff;\">export</span><span style=\"color: #000000;\"> interface </span><span style=\"color: #008080;\">IPageFormStatus</span><span style=\"color: #000000;\"> {</span></div><div><span style=\"color: #000000;\">  isDirty?: boolean;</span></div><div><span style=\"color: #000000;\">  isValid?: boolean;</span></div><div><span style=\"color: #000000;\">  isSubmitting?: boolean;</span></div><div><span style=\"color: #000000;\">  errors?: any;</span></div><div><span style=\"color: #000000;\">}</span></div><br><div><span style=\"color: #0000ff;\">const</span><span style=\"color: #000000;\"> getStyles = (theme: </span><span style=\"color: #008080;\">Theme</span><span style=\"color: #000000;\">) =&gt; {</span></div><div><span style=\"color: #000000;\">  </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> {</span></div><div><span style=\"color: #000000;\">    root: {</span></div><div><span style=\"color: #000000;\">      display: </span><span style=\"color: #a31515;\">'flex'</span><span style=\"color: #000000;\">,</span></div><div><span style=\"color: #000000;\">      flexDirection: </span><span style=\"color: #a31515;\">'column'</span><span style=\"color: #000000;\"> as </span><span style=\"color: #a31515;\">'column'</span><span style=\"color: #000000;\">,</span></div><div><span style=\"color: #000000;\">      position: </span><span style=\"color: #a31515;\">'relative'</span><span style=\"color: #000000;\"> as </span><span style=\"color: #a31515;\">'relative'</span><span style=\"color: #000000;\">,</span></div><div><span style=\"color: #000000;\">      height: </span><span style=\"color: #a31515;\">'100%'</span></div><div><span style=\"color: #000000;\">    },</span></div><div><span style=\"color: #000000;\">    mainPageForm: {</span></div><div><span style=\"color: #000000;\">      overflow: </span><span style=\"color: #a31515;\">'auto'</span><span style=\"color: #000000;\">,</span></div><div><span style=\"color: #000000;\">      display: </span><span style=\"color: #a31515;\">'flex'</span><span style=\"color: #000000;\">,</span></div><div><span style=\"color: #000000;\">      height: </span><span style=\"color: #a31515;\">'100%'</span><span style=\"color: #000000;\">,</span></div><div><span style=\"color: #000000;\">      flexDirection: </span><span style=\"color: #a31515;\">'column'</span><span style=\"color: #000000;\"> as </span><span style=\"color: #a31515;\">'column'</span><span style=\"color: #000000;\">,</span></div><div><span style=\"color: #000000;\">    },</span></div><div><span style=\"color: #000000;\">    pageHeader: {</span></div><div><span style=\"color: #000000;\">      display: </span><span style=\"color: #a31515;\">'flex'</span><span style=\"color: #000000;\">,</span></div><div><span style=\"color: #000000;\">      justifyContent: </span><span style=\"color: #a31515;\">'flex-end'</span><span style=\"color: #000000;\">,</span></div><div><span style=\"color: #000000;\">      padding: </span><span style=\"color: #a31515;\">'4px 16px 3px'</span><span style=\"color: #000000;\">,</span></div><div><span style=\"color: #000000;\">      width: </span><span style=\"color: #a31515;\">'100%'</span><span style=\"color: #000000;\">,</span></div><div><span style=\"color: #000000;\">      borderBottom: </span><span style=\"color: #a31515;\">'1px solid rgba(0, 0, 0, 0.12)'</span></div><div><span style=\"color: #000000;\">    },</span></div><div><span style=\"color: #000000;\">    notesSection: {</span></div><div><span style=\"color: #000000;\">      display: </span><span style=\"color: #a31515;\">'flex'</span><span style=\"color: #000000;\">,</span></div><div><span style=\"color: #000000;\">      backgroundColor: theme.palette.grey[</span><span style=\"color: #09885a;\">100</span><span style=\"color: #000000;\">],</span></div><div><span style=\"color: #000000;\">      flexGrow: </span><span style=\"color: #09885a;\">1</span></div><div><span style=\"color: #000000;\">    },</span></div><div><span style=\"color: #000000;\">    tagsSection: {</span></div><div><span style=\"color: #000000;\">      position: </span><span style=\"color: #a31515;\">'sticky'</span><span style=\"color: #000000;\"> as </span><span style=\"color: #a31515;\">'sticky'</span><span style=\"color: #000000;\">,</span></div><div><span style=\"color: #000000;\">      bottom: </span><span style=\"color: #09885a;\">0</span><span style=\"color: #000000;\">,</span></div><div><span style=\"color: #000000;\">      display: </span><span style=\"color: #a31515;\">'flex'</span><span style=\"color: #000000;\">,</span></div><div><span style=\"color: #000000;\">      backgroundColor: theme.palette.background.paper,</span></div><div><span style=\"color: #000000;\">      width: </span><span style=\"color: #a31515;\">'100%'</span><span style=\"color: #000000;\">,</span></div><div><span style=\"color: #000000;\">      padding: </span><span style=\"color: #a31515;\">'0 16px'</span><span style=\"color: #000000;\">,</span></div><div><span style=\"color: #000000;\">      borderTop: </span><span style=\"color: #a31515;\">'1px solid rgba(0, 0, 0, 0.12)'</span></div><div><span style=\"color: #000000;\">    }</span></div><div><span style=\"color: #000000;\">  };</span></div><div><span style=\"color: #000000;\">};</span></div><br><div><span style=\"color: #0000ff;\">const</span><span style=\"color: #000000;\"> noteValidationSchema = yup.object().shape&lt;</span><span style=\"color: #008080;\">INote</span><span style=\"color: #000000;\">&gt;({</span></div><div><span style=\"color: #000000;\">  header: yup.string().required(),</span></div><div><span style=\"color: #000000;\">  subheader: yup.string().nullable().notRequired(),</span></div><div><span style=\"color: #000000;\">  snippet: yup.object().shape&lt;</span><span style=\"color: #008080;\">ISnippet</span><span style=\"color: #000000;\">&gt;({</span></div><div><span style=\"color: #000000;\">    language: yup.string().required(),</span></div><div><span style=\"color: #000000;\">    code: yup.string(),</span></div><div><span style=\"color: #000000;\">    htmlCode: yup.string()</span></div><div><span style=\"color: #000000;\">  }),</span></div><div><span style=\"color: #000000;\">  hideContent: yup.bool().nullable(),</span></div><div><span style=\"color: #000000;\">  hideSnippet: yup.bool().nullable(),</span></div><div><span style=\"color: #000000;\">  htmlContent: yup.string(),</span></div><div><span style=\"color: #000000;\">  plainTextContent: yup.string(),</span></div><div><span style=\"color: #000000;\">  content: yup.string(),</span></div><div><span style=\"color: #000000;\">  createdAt: yup.date().nullable().notRequired(),</span></div><div><span style=\"color: #000000;\">  updatedAt: yup.date().nullable().notRequired()</span></div><div><span style=\"color: #000000;\">});</span></div><br><div><span style=\"color: #0000ff;\">const</span><span style=\"color: #000000;\"> pageValidationSchema = yup.object().shape&lt;</span><span style=\"color: #008080;\">FormPage</span><span style=\"color: #000000;\">&gt;({</span></div><div><span style=\"color: #000000;\">  _id: yup.string().nullable().notRequired(),</span></div><div><span style=\"color: #000000;\">  title: yup.string().required(),</span></div><div><span style=\"color: #000000;\">  tags: yup.array().</span><span style=\"color: #0000ff;\">of</span><span style=\"color: #000000;\">(yup.string().required()).nullable(),</span></div><div><span style=\"color: #000000;\">  notebook: yup.object().shape&lt;</span><span style=\"color: #008080;\">FormNotebook</span><span style=\"color: #000000;\">&gt;({</span></div><div><span style=\"color: #000000;\">    name: yup.string().required()</span></div><div><span style=\"color: #000000;\">  }).required(),</span></div><div><span style=\"color: #000000;\">  notes: yup.array().</span><span style=\"color: #0000ff;\">of</span><span style=\"color: #000000;\">(noteValidationSchema).min(</span><span style=\"color: #09885a;\">1</span><span style=\"color: #000000;\">, </span><span style=\"color: #a31515;\">'At least one note is required'</span><span style=\"color: #000000;\">),</span></div><div><span style=\"color: #000000;\">  createdAt: yup.date().nullable().notRequired(),</span></div><div><span style=\"color: #000000;\">  updatedAt: yup.date().nullable().notRequired()</span></div><div><span style=\"color: #000000;\">});</span></div><br><div><span style=\"color: #0000ff;\">const</span><span style=\"color: #000000;\"> defaultNote = {</span></div><div><span style=\"color: #000000;\">  </span><span style=\"color: #0000ff;\">get</span><span style=\"color: #000000;\"> value() {</span></div><div><span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> {</span></div><div><span style=\"color: #000000;\">      header: </span><span style=\"color: #a31515;\">''</span><span style=\"color: #000000;\">,</span></div><div><span style=\"color: #000000;\">      subheader: </span><span style=\"color: #a31515;\">''</span><span style=\"color: #000000;\">,</span></div><div><span style=\"color: #000000;\">      content: </span><span style=\"color: #a31515;\">''</span><span style=\"color: #000000;\">,</span></div><div><span style=\"color: #000000;\">      plainTextContent: </span><span style=\"color: #a31515;\">''</span><span style=\"color: #000000;\">,</span></div><div><span style=\"color: #000000;\">      htmlContent: </span><span style=\"color: #a31515;\">''</span><span style=\"color: #000000;\">,</span></div><div><span style=\"color: #000000;\">      hideContent: </span><span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">,</span></div><div><span style=\"color: #000000;\">      hideSnippet: </span><span style=\"color: #0000ff;\">true</span><span style=\"color: #000000;\">,</span></div><div><span style=\"color: #000000;\">      snippet: { language: </span><span style=\"color: #a31515;\">'javascript'</span><span style=\"color: #000000;\">, code: </span><span style=\"color: #a31515;\">''</span><span style=\"color: #000000;\">, htmlCode: </span><span style=\"color: #a31515;\">''</span><span style=\"color: #000000;\"> }</span></div><div><span style=\"color: #000000;\">    };</span></div><div><span style=\"color: #000000;\">  }</span></div><div><span style=\"color: #000000;\">};</span></div><br><div><span style=\"color: #0000ff;\">export</span><span style=\"color: #000000;\"> interface </span><span style=\"color: #008080;\">IPageEditProps</span><span style=\"color: #000000;\"> {</span></div><div><span style=\"color: #000000;\">  submitSubject: </span><span style=\"color: #008080;\">Subject</span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\">&gt;;</span></div><div><span style=\"color: #000000;\">  formStatus: </span><span style=\"color: #008080;\">React</span><span style=\"color: #000000;\">.</span><span style=\"color: #008080;\">MutableRefObject</span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #008080;\">IPageFormStatus</span><span style=\"color: #000000;\">&gt;;</span></div><div><span style=\"color: #000000;\">  onSubmitted: () =&gt; </span><span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\">;</span></div><div><span style=\"color: #000000;\">}</span></div><br><div><span style=\"color: #0000ff;\">function</span><span style=\"color: #000000;\"> </span><span style=\"color: #008080;\">Page</span><span style=\"color: #000000;\">({ formStatus, submitSubject, onSubmitted }: </span><span style=\"color: #008080;\">IPageEditProps</span><span style=\"color: #000000;\">) {</span></div><div><span style=\"color: #000000;\">  </span><span style=\"color: #0000ff;\">const</span><span style=\"color: #000000;\"> classes = makeStyles(getStyles)({});</span></div><div><span style=\"color: #000000;\">  </span><span style=\"color: #0000ff;\">const</span><span style=\"color: #000000;\"> currentPage = {} as </span><span style=\"color: #008080;\">IPage</span><span style=\"color: #000000;\">;</span></div><div><span style=\"color: #000000;\">  </span><span style=\"color: #0000ff;\">const</span><span style=\"color: #000000;\"> createPage = useMutation&lt;</span><span style=\"color: #008080;\">CreatePageResp</span><span style=\"color: #000000;\">, </span><span style=\"color: #008080;\">CreatePageInput</span><span style=\"color: #000000;\">&gt;(createPageMutation);</span></div><div><span style=\"color: #000000;\">  </span><span style=\"color: #0000ff;\">const</span><span style=\"color: #000000;\"> apolloClient = useApolloClient();</span></div><div><span style=\"color: #000000;\">  </span><span style=\"color: #0000ff;\">const</span><span style=\"color: #000000;\"> beforeSubmitSubject = useRef(</span><span style=\"color: #0000ff;\">new</span><span style=\"color: #000000;\"> </span><span style=\"color: #008080;\">Subject</span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #0000ff;\">void</span><span style=\"color: #000000;\">&gt;());</span></div><div><span style=\"color: #000000;\">  </span><span style=\"color: #0000ff;\">const</span><span style=\"color: #000000;\"> formikRef = useRef&lt;</span><span style=\"color: #008080;\">Formik</span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #008080;\">Omit</span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #008080;\">IPage</span><span style=\"color: #000000;\">, </span><span style=\"color: #a31515;\">'_id'</span><span style=\"color: #000000;\">&gt;&gt;&gt;(</span><span style=\"color: #0000ff;\">null</span><span style=\"color: #000000;\">);</span></div><br><div><span style=\"color: #000000;\">  </span><span style=\"color: #0000ff;\">const</span><span style=\"color: #000000;\"> getInitialValues = useCallback((): </span><span style=\"color: #008080;\">Omit</span><span style=\"color: #000000;\">&lt;</span><span style=\"color: #008080;\">IPage</span><span style=\"color: #000000;\">, </span><span style=\"color: #a31515;\">'_id'</span><span style=\"color: #000000;\">&gt; =&gt; ({</span></div><div><span style=\"color: #000000;\">    title: currentPage.title || </span><span style=\"color: #a31515;\">''</span><span style=\"color: #000000;\">,</span></div><div><span style=\"color: #000000;\">    notebook: currentPage.notebook,</span></div><div><span style=\"color: #000000;\">    tags: currentPage.tags || [],</span></div><div><span style=\"color: #000000;\">    notes: </span><span style=\"color: #008080;\">Array</span><span style=\"color: #000000;\">.isArray(currentPage.notes) ? currentPage.notes</span></div><div><span style=\"color: #000000;\">      : [</span><span style=\"color: #008080;\">Object</span><span style=\"color: #000000;\">.assign(defaultNote.value, { hideContent: </span><span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\">, hideSnippet: </span><span style=\"color: #0000ff;\">false</span><span style=\"color: #000000;\"> })]</span></div><div><span style=\"color: #000000;\">  }), []);</span></div><br><div><span style=\"color: #000000;\">  </span><span style=\"color: #0000ff;\">const</span><span style=\"color: #000000;\"> submitPage = useCallback(</span><span style=\"color: #0000ff;\">async</span><span style=\"color: #000000;\"> () =&gt; {</span></div><div><span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">try</span><span style=\"color: #000000;\"> {</span></div><div><span style=\"color: #000000;\">      </span><span style=\"color: #008000;\">// Trigger onBefore submit to set child values</span></div><div><span style=\"color: #000000;\">      </span><span style=\"color: #008000;\">// (som operations are too heavy to set with the usual onChange pattern)</span></div><div><span style=\"color: #000000;\">      </span><span style=\"color: #0000ff;\">await</span><span style=\"color: #000000;\"> beforeSubmitSubject.current.next();</span></div><div><span style=\"color: #000000;\">      </span><span style=\"color: #0000ff;\">const</span><span style=\"color: #000000;\"> formValues = formikRef.current.getFormikBag().values;</span></div><br><div><span style=\"color: #000000;\">      </span><span style=\"color: #0000ff;\">await</span><span style=\"color: #000000;\"> createPage({</span></div><div><span style=\"color: #000000;\">        variables: { input: { ...formValues, notebook: formValues.notebook.name } },</span></div><div><span style=\"color: #000000;\">        update: </span><span style=\"color: #0000ff;\">async</span><span style=\"color: #000000;\"> () =&gt; {</span></div><div><span style=\"color: #000000;\">          </span><span style=\"color: #0000ff;\">await</span><span style=\"color: #000000;\"> apolloClient.resetStore();</span></div><div><span style=\"color: #000000;\">          onSubmitted();</span></div><div><span style=\"color: #000000;\">        }</span></div><div><span style=\"color: #000000;\">      });</span></div><div><span style=\"color: #000000;\">    } </span><span style=\"color: #0000ff;\">catch</span><span style=\"color: #000000;\"> {} </span><span style=\"color: #008000;\">// tslint:disable-line no-empty</span></div><div><span style=\"color: #000000;\">  }, []);</span></div><br><div><span style=\"color: #000000;\">  useEffect(() =&gt; {</span></div><div><span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">const</span><span style=\"color: #000000;\"> submitSubscription = submitSubject.subscribe(</span><span style=\"color: #0000ff;\">async</span><span style=\"color: #000000;\"> () =&gt; {</span></div><div><span style=\"color: #000000;\">      </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (!formStatus.current.isValid) {</span></div><div><span style=\"color: #000000;\">        </span><span style=\"color: #008000;\">// Phantom submit invalid form, just to show validation errors</span></div><div><span style=\"color: #000000;\">        formikRef.current.submitForm();</span></div><div><span style=\"color: #000000;\">      } </span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">if</span><span style=\"color: #000000;\"> (!formStatus.current.isDirty) {</span></div><div><span style=\"color: #000000;\">        onSubmitted();</span></div><div><span style=\"color: #000000;\">      } </span><span style=\"color: #0000ff;\">else</span><span style=\"color: #000000;\"> {</span></div><div><span style=\"color: #000000;\">        </span><span style=\"color: #0000ff;\">await</span><span style=\"color: #000000;\"> submitPage();</span></div><div><span style=\"color: #000000;\">      }</span></div><div><span style=\"color: #000000;\">    });</span></div><br><div><span style=\"color: #000000;\">    </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> () =&gt; submitSubscription.unsubscribe();</span></div><div><span style=\"color: #000000;\">  }, []);</span></div><br><div><span style=\"color: #000000;\">  </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> (</span></div><div><span style=\"color: #000000;\">    &lt;</span><span style=\"color: #008080;\">Paper</span><span style=\"color: #000000;\"> className={classes.root}&gt;</span></div><div><span style=\"color: #000000;\">      &lt;</span><span style=\"color: #008080;\">Formik</span><span style=\"color: #000000;\"> ref={formikRef} initialValues={getInitialValues()} validationSchema={pageValidationSchema} onSubmit={() =&gt; {}}&gt;</span></div><div><span style=\"color: #000000;\">        {(formikBag) =&gt; {</span></div><div><span style=\"color: #000000;\">          </span><span style=\"color: #0000ff;\">const</span><span style=\"color: #000000;\"> { dirty, isValid, isSubmitting, errors } = formikBag;</span></div><div><span style=\"color: #000000;\">          formStatus.current = { isDirty: dirty, isSubmitting, isValid, errors };</span></div><br><div><span style=\"color: #000000;\">          </span><span style=\"color: #0000ff;\">return</span><span style=\"color: #000000;\"> (</span></div><div><span style=\"color: #000000;\">            &lt;form className={classes.mainPageForm}&gt;</span></div><div><span style=\"color: #000000;\">              &lt;section className={classes.pageHeader}&gt;</span></div><div><span style=\"color: #000000;\">                &lt;</span><span style=\"color: #008080;\">PageHeader</span><span style=\"color: #000000;\"> parentFormBag={formikBag} /&gt;</span></div><div><span style=\"color: #000000;\">              &lt;/section&gt;</span></div><br><div><span style=\"color: #000000;\">              &lt;section className={classes.notesSection}&gt;</span></div><div><span style=\"color: #000000;\">                &lt;</span><span style=\"color: #008080;\">NotesSection</span><span style=\"color: #000000;\"> beforeSubmitSubject={beforeSubmitSubject.current} parentFormBag={formikBag} defaultNote={defaultNote} /&gt;</span></div><div><span style=\"color: #000000;\">              &lt;/section&gt;</span></div><div><span style=\"color: #000000;\">              &lt;section className={classes.tagsSection}&gt;</span></div><div><span style=\"color: #000000;\">                &lt;</span><span style=\"color: #008080;\">TagsSection</span><span style=\"color: #000000;\"> parentFormBag={formikBag} /&gt;</span></div><div><span style=\"color: #000000;\">              &lt;/section&gt;</span></div><div><span style=\"color: #000000;\">            &lt;/form&gt;</span></div><div><span style=\"color: #000000;\">          );</span></div><div><span style=\"color: #000000;\">        }}</span></div><div><span style=\"color: #000000;\">      &lt;/</span><span style=\"color: #008080;\">Formik</span><span style=\"color: #000000;\">&gt;</span></div><div><span style=\"color: #000000;\">    &lt;/</span><span style=\"color: #008080;\">Paper</span><span style=\"color: #000000;\">&gt;</span></div><div><span style=\"color: #000000;\">  );</span></div><div><span style=\"color: #000000;\">}</span></div><br><div><span style=\"color: #008080;\">Page</span><span style=\"color: #000000;\">.propTypes = {</span></div><div><span style=\"color: #000000;\">  formStatus: </span><span style=\"color: #008080;\">PropTypes</span><span style=\"color: #000000;\">.shape({ current: </span><span style=\"color: #008080;\">PropTypes</span><span style=\"color: #000000;\">.object }).isRequired,</span></div><div><span style=\"color: #000000;\">  submitSubject: </span><span style=\"color: #008080;\">PropTypes</span><span style=\"color: #000000;\">.object.isRequired,</span></div><div><span style=\"color: #000000;\">  onSubmitted: </span><span style=\"color: #008080;\">PropTypes</span><span style=\"color: #000000;\">.func.isRequired</span></div><div><span style=\"color: #000000;\">};</span></div><br><div><span style=\"color: #0000ff;\">export</span><span style=\"color: #000000;\"> </span><span style=\"color: #0000ff;\">default</span><span style=\"color: #000000;\"> </span><span style=\"color: #008080;\">Page</span><span style=\"color: #000000;\">;</span></div></div>"},"hideContent":false,"hideSnippet":false,"createdAt":{"$$date":1562282731802}}],"createdAt":{"$$date":1562282731802},"updatedAt":{"$$date":1562282731802},"_id":"ex103gL4cXIeLonz"}
